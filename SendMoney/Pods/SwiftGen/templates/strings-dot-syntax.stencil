// Generated using SwiftGen, by O.Halligon â€” https://github.com/SwiftGen/SwiftGen

{% if tables.first.levels %}
import Foundation

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
// swiftlint:disable nesting
// swiftlint:disable variable_name
// swiftlint:disable valid_docs
// swiftlint:disable type_name
{% macro parametersBlock types %}{% for type in types %}p{{forloop.counter}}: {{type}}{% if not forloop.last %}, {% endif %}{% endfor %}{% endmacro %}
{% macro argumentsBlock types %}{% for type in types %}p{{forloop.counter}}{% if not forloop.last %}, {% endif %}{% endfor %}{% endmacro %}
{% macro recursiveBlock item sp %}
{{sp}}  {% for string in item.strings %}
{{sp}}  /// {{string.translation}}
{{sp}}  {% if string.types %}
{{sp}}  static func {{string.name|swiftIdentifier|snakeToCamelCase|escapeReservedKeywords}}({% call parametersBlock string.types %}) -> String {
{{sp}}    return {{enumName}}.tr("{{string.key}}", {% call argumentsBlock string.types %})
{{sp}}  }
{{sp}}  {% else %}
{{sp}}  static let {{string.name|swiftIdentifier|snakeToCamelCase|escapeReservedKeywords}} = {{enumName}}.tr("{{string.key}}")
{{sp}}  {% endif %}
{{sp}}  {% endfor %}
{{sp}}  {% for child in item.children %}

{{sp}}  enum {{child.name|swiftIdentifier|snakeToCamelCase}} {
{{sp}}    {% set sp2 %}{{sp}}  {% endset %}
{{sp}}    {% call recursiveBlock child sp2 %}
{{sp}}  }
{{sp}}  {% endfor %}
{% endmacro %}

{% set enumName %}{{param.enumName|default:"L10n"}}{% endset %}
enum {{enumName}} {
  {% call recursiveBlock tables.first.levels sp %}
}

extension {{enumName}} {
  private static func tr(key: String, _ args: CVarArgType...) -> String {
    let format = NSLocalizedString(key, bundle: NSBundle(forClass: BundleToken.self), comment: "")
    return String(format: format, locale: NSLocale.currentLocale(), arguments: args)
  }
}

private final class BundleToken {}

// swiftlint:enable type_body_length
// swiftlint:enable nesting
// swiftlint:enable variable_name
// swiftlint:enable valid_docs
{% else %}
// No string found
{% endif %}
